/*
 *  Copyright (c) 2022 NetEase Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

syntax="proto2";
option go_package = "proto/topology/statuscode";

enum TopoStatusCode {
    Success = 0;
    InternalError = -1;
    InvalidParam = -2;
    InitFail = -3;
    StorgeFail = -4;
    IdDuplicated = -5;
    ChunkServerNotFound = -6;
    ServerNotFound = -7;
    ZoneNotFound = -8;
    PhysicalPoolNotFound = -9;
    LogicalPoolNotFound = -10;
    CopySetNotFound = -11;
    GenCopysetErr = -12;
    AllocateIdFail = -13;
    CannotRemoveWhenNotEmpty = -14;
    IpPortDuplicated = -15;
    NameDuplicated = -16;
    CreateCopysetNodeOnChunkServerFail = -17;
    CannotRemoveNotRetired = -18;
    LogicalPoolExist = -19;
}

enum GetSegmentRes {
    OK = 0;  // 获取segment成功
    SegmentNotAllocated = 107; // segment不存在
    FileNotExists = 102;  // 文件不存在
    OtherError = -3;  // 其他错误
}

enum CopysetStatusCode{
    CopysetSuccess = 0;
    Exist = 1;     // copyset node 已经存在
    NotExist = 2;
    UnknowErr = 3;
    Healthy = 4;
}

enum ChunkStatusCode{
    ChunkSuccess = 0;
    Redirect = 1;                      // not leader,Redirect
    DiskErr = 2;                       // disk error
    CrcFail = 3;                       // Crc check error
    InvalidReqParam = 4;               // request param error
    NoEnoughSpace = 5;                 // space not enough
    CopysetNotExist = 6;               // copyset doesn't exist
    ChunkNotExist = 7;                 // chunk or snapshot doesn't exist
    UnknowFailure = 8;                 // Unknow failure
    OverLoad = 9;                      // server overload
    Backward = 10;                     // the requested version behind current chunk version
    ChunkExist = 11;                   // chunk has exist
    EpochOld = 12;                     // requested Epoch is old
}

// chunkserver health status
enum CsHealthStatus{
    CpsHealthy = 0;      // chunkserver上的所有copyset健康
    CpsNotHealthy = -1;  //chunkserver上的所有copyset不健康
    CsNotOnline  = -2;  //chunkserver 不在线
}
