/*
 *  Copyright (c) 2022 NetEase Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

syntax="proto2";
option go_package = "proto/topology/statuscode";

enum TopoStatusCode {
    Success = 0;
    InternalError = -1;
    InvalidParam = -2;
    InitFail = -3;
    StorgeFail = -4;
    IdDuplicated = -5;
    ChunkServerNotFound = -6;
    ServerNotFound = -7;
    ZoneNotFound = -8;
    PhysicalPoolNotFound = -9;
    LogicalPoolNotFound = -10;
    CopySetNotFound = -11;
    GenCopysetErr = -12;
    AllocateIdFail = -13;
    CannotRemoveWhenNotEmpty = -14;
    IpPortDuplicated = -15;
    NameDuplicated = -16;
    CreateCopysetNodeOnChunkServerFail = -17;
    CannotRemoveNotRetired = -18;
    LogicalPoolExist = -19;
}

enum GetSegmentRes {
    OK = 0;  // 获取segment成功
    SegmentNotAllocated = 107; // segment不存在
    FileNotExists = 102;  // 文件不存在
    OtherError = -3;  // 其他错误
}

enum CopysetStatusCode{
    CopysetSuccess = 0;
    Exist = 1;     // copyset node 已经存在
    NotExist = 2;
    UnknowErr = 3;
    Healthy = 4;
}

enum ChunkStatusCode{
    ChunkSuccess = 0;
    Redirect = 1;                     //不是leader,重定向
    DiskErr = 2;                     //磁盘返回错误
    CrcFail = 3;                    //Crc校验错误
    InvalidReqParam = 4;           //请求参数错误
    NoEnoughSpace = 5;            //空间不够
    CopysetNotExist = 6;         //copyset不存在
    ChunkNotExist = 7;          //chunk或其快照文件不存在
    UnknowFailure = 8;          //未知错误
    OverLoad = 9;               //服务端过载
    Backward = 10;             // 请求的版本落后当前chunk的版本
    ChunkExist = 11;           //chunk已存在
    EpochOld = 12;             // 请求中的epoch太老了
}


